(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{456:function(v,_,l){"use strict";l.r(_);var i=l(48),t=Object(i.a)({},(function(){var v=this,_=v.$createElement,l=v._self._c||_;return l("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[l("h1",{attrs:{id:"数据结构和算法"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#数据结构和算法"}},[v._v("#")]),v._v(" 数据结构和算法")]),v._v(" "),l("ul",[l("li",[v._v("用 JavaScript 写一个函数，输入 int 型，返回整数逆序后的字符串。如：输入整型 1234，返回字符串“4321”。要求必须使用递归函数调用，不能用全局变量，输入函数必须只有一个参数传入，必须返回字符串。")]),v._v(" "),l("li",[v._v("给定两个大小为 m 和 n 的有序数组 nums1 和 nums2。请找出这两个有序数组的中位数。要求算法的时间复杂度为 O(log(m+n))。")]),v._v(" "),l("li",[v._v("给定一个整数数组和一个目标值，找出数组中和为目标值的两个数。")]),v._v(" "),l("li",[v._v("给定一个数组 nums，编写一个函数将所有 0 移动到数组的末尾，同时保持非零元素的相对顺序。")]),v._v(" "),l("li",[v._v("打印出 1 - 10000 之间的所有对称数,例如：121、1331 等")]),v._v(" "),l("li",[v._v("给定一个数组，将数组中的元素向右移动 k 个位置，其中 k 是非负数。")]),v._v(" "),l("li",[v._v("数组里面有10万个数据，取第一个元素和第10万个元素的时间相差多少")]),v._v(" "),l("li",[v._v("如何把一个字符串的大小写取反（大写变小写小写变大写），例如 ’AbC' 变成 'aBc' 。")]),v._v(" "),l("li",[v._v("随机生成一个长度为 10 的整数类型的数组，例如 [2, 10, 3, 4, 5, 11, 10, 11, 20]，将其排列成一个新数组，要求新数组形式如下，例如 [[2, 3, 4, 5], [10, 11], [20]]。")]),v._v(" "),l("li",[v._v("给定两个数组，写一个方法来计算它们的交集。")]),v._v(" "),l("li",[v._v("冒泡排序如何实现，时间复杂度是多少， 还可以如何改进？")]),v._v(" "),l("li",[v._v("使用 sort() 对数组 [3, 15, 8, 29, 102, 22] 进行排序，输出结果")]),v._v(" "),l("li",[v._v("两个数组合并成一个数组\n请把两个数组 ['A1', 'A2', 'B1', 'B2', 'C1', 'C2', 'D1', 'D2'] 和 ['A', 'B', 'C', 'D']，合并为 ['A1', 'A2', 'A', 'B1', 'B2', 'B', 'C1', 'C2', 'C', 'D1', 'D2', 'D']。")]),v._v(" "),l("li",[v._v("var arr = [ [1, 2, 2], [3, 4, 5, 5], [6, 7, 8, 9, [11, 12, [12, 13, [14] ] ] ], 10];\n编写一个程序将数组扁平化去并除其中重复部分数据，最终得到一个升序且不重复的数组")]),v._v(" "),l("li",[v._v("给定一个sum 检验一棵树中，是否存在一条路径和为sum，输出该路径")]),v._v(" "),l("li",[v._v("写一个函数，给定一棵树，输出这棵树的深度")]),v._v(" "),l("li",[v._v("写一个函数，给定一个url和最大深度maxdeep，输出抓取当前url及其子链接深度范围内的所有图片")]),v._v(" "),l("li",[v._v("写一个函数，给定nodes=[]，每一个节点拥有id,name,parentid，输出一个属性列表的展示(涉及dom操作)")]),v._v(" "),l("li",[v._v("实现一个NumberStack，实现pop，push，max(n)方法，max(n)返回第n大的数，max(n)需要 O(1)的时间复杂度")]),v._v(" "),l("li",[v._v("给定一个html，输出其中包含的html标签数量，可以用domapi 注意iframe")]),v._v(" "),l("li",[v._v("写一个数组方法，打乱整个数组顺序，并且每个数字落在各个位置的概率相同")]),v._v(" "),l("li",[l("ul",[l("li",[v._v("给定 n 个 {x, y, w, h}的盒子 按需排列，左上聚拢(层叠后的max(h)*max(w)最小)，求给一个{w,h}，输出放置的位置")])])])])])}),[],!1,null,null,null);_.default=t.exports}}]);